!function(e){var n={};function s(t){if(n[t])return n[t].exports;var o=n[t]={i:t,l:!1,exports:{}};return e[t].call(o.exports,o,o.exports,s),o.l=!0,o.exports}s.m=e,s.c=n,s.d=function(e,n,t){s.o(e,n)||Object.defineProperty(e,n,{configurable:!1,enumerable:!0,get:t})},s.r=function(e){Object.defineProperty(e,"__esModule",{value:!0})},s.n=function(e){var n=e&&e.__esModule?function(){return e.default}:function(){return e};return s.d(n,"a",n),n},s.o=function(e,n){return Object.prototype.hasOwnProperty.call(e,n)},s.p="",s.w={},s(s.s="./index.ts")}({"./app.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst Express = __webpack_require__(/*! express */ "express");\nconst bodyParser = __webpack_require__(/*! body-parser */ "body-parser");\nconst http = __webpack_require__(/*! http */ "http");\nconst io = __webpack_require__(/*! socket.io */ "socket.io");\nconst cors = __webpack_require__(/*! cors */ "cors");\nconst mongoose = __webpack_require__(/*! mongoose */ "mongoose");\nconst env_1 = __webpack_require__(/*! ./config/env */ "./config/env.ts");\nconst socket_1 = __webpack_require__(/*! ./config/socket */ "./config/socket.ts");\nconst games_1 = __webpack_require__(/*! ./routes/games/games */ "./routes/games/games.ts");\nclass App {\n    constructor() {\n        this.instantiateApplicationDefaults = () => {\n            mongoose.Promise = global.Promise;\n            mongoose.connect(env_1.MONGO_URI);\n            this.app.use(bodyParser.json());\n            this.app.use(cors());\n        };\n        this.setupAPI = () => {\n            this.app.use(\'/api\', games_1.gamesRoute);\n        };\n        this.setupSocket = () => {\n            socket_1.socket(this.io);\n        };\n        this.start = () => {\n            this.server.listen(env_1.PORT);\n            process.stdout.write(`Listening on port ${env_1.PORT} in ${env_1.NODE_ENV} mode`);\n        };\n        this.app = Express();\n        this.server = new http.Server(this.app);\n        this.io = io(this.server);\n        this.instantiateApplicationDefaults();\n        this.setupAPI();\n        this.setupSocket();\n        this.start();\n    }\n}\nexports.App = App;\n\n\n//# sourceURL=webpack:///./app.ts?')},"./config/env.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nexports.PORT = process.env.PORT || 9000;\nexports.NODE_ENV = \"development\" || 'development';\nexports.MONGO_URI = process.env.MONGO_URI || 'mongodb://localhost/trvia';\n\n\n//# sourceURL=webpack:///./config/env.ts?")},"./config/socket.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst join_game_1 = __webpack_require__(/*! ../events/join-game */ \"./events/join-game.ts\");\nconst create_game_1 = __webpack_require__(/*! ../events/create-game */ \"./events/create-game.ts\");\nconst start_game_1 = __webpack_require__(/*! ../events/start-game */ \"./events/start-game.ts\");\nconst get_live_games_1 = __webpack_require__(/*! ../events/get-live-games */ \"./events/get-live-games.ts\");\nconst get_players_1 = __webpack_require__(/*! ../events/get-players */ \"./events/get-players.ts\");\nconst submit_answer_1 = __webpack_require__(/*! ../events/submit-answer */ \"./events/submit-answer.ts\");\nconst reset_answer_count_1 = __webpack_require__(/*! ../events/reset-answer-count */ \"./events/reset-answer-count.ts\");\nconst end_of_game_1 = __webpack_require__(/*! ../events/end-of-game */ \"./events/end-of-game.ts\");\nconst leave_game_1 = __webpack_require__(/*! ../events/leave-game */ \"./events/leave-game.ts\");\nconst disconnect_1 = __webpack_require__(/*! ../events/disconnect */ \"./events/disconnect.ts\");\nconst get_winner_1 = __webpack_require__(/*! ../events/get-winner */ \"./events/get-winner.ts\");\nconst socket = io => {\n    io.on('connection', socket => {\n        socket.on('joinGame', join_game_1.JoinGame.bind(null, socket, io));\n        socket.on('createGame', create_game_1.CreateGame.bind(null, socket, io));\n        socket.on('startGame', start_game_1.StartGame.bind(null, io));\n        socket.on('getLiveGames', get_live_games_1.GetLiveGames.bind(null, socket));\n        socket.on('getPlayers', get_players_1.GetPlayers.bind(null, socket, io));\n        socket.on('submitAnswer', submit_answer_1.SubmitAnswer.bind(null, socket, io));\n        socket.on('resetAnswerCount', reset_answer_count_1.ResetAnswerCount);\n        socket.on('endOfGame', end_of_game_1.EndOfGame.bind(null, socket, io));\n        socket.on('leaveGame', leave_game_1.LeaveGame.bind(null, socket, io));\n        socket.on('disconnect', disconnect_1.Disconnect.bind(null, socket, io));\n        socket.on('getTheOverallWinner', get_winner_1.GetWinner.bind(null, io));\n    });\n};\nexports.socket = socket;\n\n\n//# sourceURL=webpack:///./config/socket.ts?")},"./config/world.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nexports.players = {};\nexports.scores = [];\nexports.games = {};\nexports.winningScore = {};\n\n\n//# sourceURL=webpack:///./config/world.ts?')},"./events/create-game.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = __webpack_require__(/*! ../utilities/utils */ \"./utilities/utils.ts\");\nconst world_1 = __webpack_require__(/*! ../config/world */ \"./config/world.ts\");\nconst CreateGame = (socket, io, options) => {\n    utils_1.getQuestions(options).then((questions) => {\n        utils_1.createGame(options.gameName, questions).then((gameId) => {\n            socket.emit('gameId', gameId);\n            socket.join(gameId);\n            world_1.games[gameId] = {\n                gameId: gameId,\n                gameName: options.gameName,\n                answers: 0,\n                isInPlay: false,\n                private: options.private\n            };\n            world_1.players[socket.id] = {\n                gameId: gameId,\n                name: options.playerName,\n                isHost: options.isHost,\n                score: 0\n            };\n            io.in(gameId).emit('playerJoined', options.playerName);\n            io.emit('updateLiveGames', {\n                list: utils_1.getLiveGames(world_1.games)\n            });\n        });\n    });\n};\nexports.CreateGame = CreateGame;\n\n\n//# sourceURL=webpack:///./events/create-game.ts?")},"./events/disconnect.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = __webpack_require__(/*! ../utilities/utils */ \"./utilities/utils.ts\");\nconst world_1 = __webpack_require__(/*! ../config/world */ \"./config/world.ts\");\nconst Disconnect = (socket, io) => {\n    if (world_1.players[socket.id] && world_1.players[socket.id].isHost) {\n        io.in(world_1.players[socket.id].gameId).emit('hostLeft');\n        utils_1.deleteGame(world_1.players[socket.id].gameId);\n        delete world_1.games[world_1.players[socket.id].gameId];\n        io.emit('updateLiveGames', {\n            list: utils_1.getLiveGames(world_1.games)\n        });\n    }\n    else if (world_1.players[socket.id] && !world_1.players[socket.id].isHost) {\n        io.in(world_1.players[socket.id].gameId).emit('playerLeft', world_1.players[socket.id].playerName);\n    }\n    else {\n        return;\n    }\n    delete world_1.players[socket.id];\n};\nexports.Disconnect = Disconnect;\n\n\n//# sourceURL=webpack:///./events/disconnect.ts?")},"./events/end-of-game.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst world_1 = __webpack_require__(/*! ../config/world */ "./config/world.ts");\nconst EndOfGame = (socket, io, options) => {\n    if (world_1.players[socket.id].gameId === options.gameId) {\n        socket.emit(\'getPlayersScore\', {\n            score: world_1.players[socket.id].score\n        });\n    }\n};\nexports.EndOfGame = EndOfGame;\n\n\n//# sourceURL=webpack:///./events/end-of-game.ts?')},"./events/get-live-games.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst utils_1 = __webpack_require__(/*! ../utilities/utils */ "./utilities/utils.ts");\nconst world_1 = __webpack_require__(/*! ../config/world */ "./config/world.ts");\nconst GetLiveGames = (socket) => {\n    socket.emit(\'listOfLiveGames\', {\n        list: utils_1.getLiveGames(world_1.games)\n    });\n};\nexports.GetLiveGames = GetLiveGames;\n\n\n//# sourceURL=webpack:///./events/get-live-games.ts?')},"./events/get-players.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst world_1 = __webpack_require__(/*! ../config/world */ "./config/world.ts");\nconst GetPlayers = (socket, io, options) => {\n    if (!io.sockets.adapter.rooms[options.gameId]) {\n        return;\n    }\n    const playersInRoom = io.sockets.adapter.rooms[options.gameId].sockets;\n    const updatedPlayersList = [];\n    const playersInGameCount = Object.keys(playersInRoom).length;\n    for (let key in playersInRoom) {\n        if (world_1.players[key]) {\n            updatedPlayersList.push(world_1.players[key]);\n            if (playersInGameCount === updatedPlayersList.length) {\n                socket.emit(\'updatePlayersInGame\', updatedPlayersList);\n            }\n        }\n    }\n};\nexports.GetPlayers = GetPlayers;\n\n\n//# sourceURL=webpack:///./events/get-players.ts?')},"./events/get-winner.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst utils_1 = __webpack_require__(/*! ../utilities/utils */ "./utilities/utils.ts");\nconst world_1 = __webpack_require__(/*! ../config/world */ "./config/world.ts");\nconst GetWinner = (io, options) => {\n    world_1.scores[options.gameId] = [];\n    for (let key in world_1.players) {\n        if (world_1.players[key].gameId === options.gameId) {\n            world_1.scores[options.gameId].push(world_1.players[key].score);\n        }\n    }\n    io.in(options.gameId).emit(\'theWinner\', {\n        name: utils_1.findWinner(world_1.scores, world_1.players, options)\n    });\n    delete world_1.scores[options.gameId];\n};\nexports.GetWinner = GetWinner;\n\n\n//# sourceURL=webpack:///./events/get-winner.ts?')},"./events/join-game.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = __webpack_require__(/*! ../utilities/utils */ \"./utilities/utils.ts\");\nconst world_1 = __webpack_require__(/*! ../config/world */ \"./config/world.ts\");\nconst JoinGame = (socket, io, options) => {\n    utils_1.doesGameExist(options.gameId).then(exists => {\n        if (exists) {\n            if (world_1.games[options.gameId].isInPlay) {\n                socket.emit('gameHasStarted', { message: 'That game has already started' });\n                return;\n            }\n            socket.join(options.gameId);\n            world_1.players[socket.id] = {\n                gameId: options.gameId,\n                name: options.playerName,\n                isHost: options.isHost,\n                score: 0\n            };\n            utils_1.getQuestionsForGame(options.gameId).then(questions => {\n                socket.emit('joinedGame', questions);\n                io.in(options.gameId).emit('playerJoined', options.playerName);\n            });\n        }\n        else {\n            socket.emit('gameDoesNotExist', { message: 'That game does not exist' });\n        }\n    });\n};\nexports.JoinGame = JoinGame;\n\n\n//# sourceURL=webpack:///./events/join-game.ts?")},"./events/leave-game.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst utils_1 = __webpack_require__(/*! ../utilities/utils */ \"./utilities/utils.ts\");\nconst world_1 = __webpack_require__(/*! ../config//world */ \"./config/world.ts\");\nconst LeaveGame = (socket, io, options) => {\n    if (world_1.players[socket.id] && world_1.players[socket.id].isHost) {\n        io.in(options.gameId).emit('hostLeft');\n        delete world_1.games[options.gameId];\n        utils_1.deleteGame(options.gameId);\n        io.emit('updateLiveGames', {\n            list: utils_1.getLiveGames(world_1.games)\n        });\n    }\n    io.in(options.gameId).emit('playerLeft', options.playerName);\n    socket.leave(options.gameId);\n};\nexports.LeaveGame = LeaveGame;\n\n\n//# sourceURL=webpack:///./events/leave-game.ts?")},"./events/reset-answer-count.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst world_1 = __webpack_require__(/*! ../config/world */ "./config/world.ts");\nconst ResetAnswerCount = (options) => {\n    if (world_1.games[options.gameId]) {\n        world_1.games[options.gameId].answers = 0;\n    }\n    else {\n        world_1.games[options.gameId] = {\n            answers: 0\n        };\n    }\n};\nexports.ResetAnswerCount = ResetAnswerCount;\n\n\n//# sourceURL=webpack:///./events/reset-answer-count.ts?')},"./events/start-game.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst utils_1 = __webpack_require__(/*! ../utilities/utils */ "./utilities/utils.ts");\nconst world_1 = __webpack_require__(/*! ../config/world */ "./config/world.ts");\nconst StartGame = (io, options) => {\n    utils_1.getQuestionsForGame(options.gameId).then(questions => {\n        io.in(options.gameId).emit(\'startTheGame\', questions);\n        world_1.games[options.gameId].isInPlay = true;\n        io.emit(\'updateLiveGames\', {\n            list: utils_1.getLiveGames(world_1.games)\n        });\n    });\n};\nexports.StartGame = StartGame;\n\n\n//# sourceURL=webpack:///./events/start-game.ts?')},"./events/submit-answer.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst world_1 = __webpack_require__(/*! ../config/world */ "./config/world.ts");\nconst SubmitAnswer = (socket, io, options) => {\n    if (options.isAnswerCorrect) {\n        world_1.players[socket.id].score = world_1.players[socket.id].score + 1 * 100;\n    }\n    world_1.games[options.gameId].answers = world_1.games[options.gameId].answers + 1;\n    if (world_1.games[options.gameId].answers === Object.keys(io.sockets.adapter.rooms[options.gameId].sockets).length) {\n        io.in(options.gameId).emit(\'everyoneAnswered\');\n        world_1.games[options.gameId].answers = 0;\n    }\n};\nexports.SubmitAnswer = SubmitAnswer;\n\n\n//# sourceURL=webpack:///./events/submit-answer.ts?')},"./index.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst app_1 = __webpack_require__(/*! ./app */ "./app.ts");\nnew app_1.App();\n\n\n//# sourceURL=webpack:///./index.ts?')},"./models/game/game.model.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst restful = __webpack_require__(/*! node-restful */ "node-restful");\nconst mongoose = restful.mongoose;\nconst gameSchema = new mongoose.Schema({\n    name: {\n        type: String,\n        required: true\n    },\n    gameId: {\n        type: String,\n        required: true\n    },\n    questions: {\n        type: Array,\n        required: true\n    }\n});\nconst GamesModel = restful.model(\'Game\', gameSchema);\nexports.GamesModel = GamesModel;\n\n\n//# sourceURL=webpack:///./models/game/game.model.ts?')},"./routes/games/games.ts":function(module,exports,__webpack_require__){"use strict";eval("\nObject.defineProperty(exports, \"__esModule\", { value: true });\nconst express = __webpack_require__(/*! express */ \"express\");\nconst game_model_1 = __webpack_require__(/*! ../../models/game/game.model */ \"./models/game/game.model.ts\");\nconst gamesRoute = express.Router();\nexports.gamesRoute = gamesRoute;\ngame_model_1.GamesModel.methods(['get', 'post', 'delete']);\ngame_model_1.GamesModel.register(gamesRoute, '/games');\n\n\n//# sourceURL=webpack:///./routes/games/games.ts?")},"./utilities/utils.ts":function(module,exports,__webpack_require__){"use strict";eval('\nObject.defineProperty(exports, "__esModule", { value: true });\nconst request_1 = __webpack_require__(/*! request */ "request");\nconst shortid_1 = __webpack_require__(/*! shortid */ "shortid");\nconst env_1 = __webpack_require__(/*! ../config/env */ "./config/env.ts");\nconst world_1 = __webpack_require__(/*! ../config/world */ "./config/world.ts");\nexports.getBaseUri = () => {\n    return env_1.NODE_ENV === \'development\'\n        ? `http://localhost:${env_1.PORT}/api/games`\n        : \'https://trvia.herokuapp.com/api/games\';\n};\nexports.findWinner = (scores, players, options) => {\n    world_1.winningScore[options.gameId] = Math.max(...scores[options.gameId]);\n    for (let key in players) {\n        if (players[key].gameId === options.gameId) {\n            if (players[key].score === world_1.winningScore[options.gameId]) {\n                return players[key].name;\n            }\n        }\n    }\n};\nexports.doesGameExist = gameId => {\n    return new Promise((resolve) => {\n        request_1.default(exports.getBaseUri(), (error, response) => {\n            const games = JSON.parse(response.body);\n            resolve(games.some(game => game.gameId === gameId));\n        });\n    });\n};\nexports.getQuestionsForGame = gameId => {\n    return new Promise((resolve) => {\n        request_1.default(exports.getBaseUri(), (error, response) => {\n            const games = JSON.parse(response.body);\n            games.forEach(game => {\n                if (game.gameId === gameId) {\n                    resolve(game.questions[0].results);\n                }\n            });\n        });\n    });\n};\nexports.getQuestions = (options) => {\n    return new Promise((resolve, reject) => {\n        request_1.default(`https://opentdb.com/api.php?amount=${options.amount}&difficulty=${options.difficulty}`, (error, response, body) => {\n            if (error) {\n                reject(error);\n            }\n            else {\n                resolve(body);\n            }\n        });\n    });\n};\nexports.createGame = (gameName, questions) => {\n    const gameId = shortid_1.default.generate();\n    return new Promise(resolve => {\n        request_1.default.post({\n            url: exports.getBaseUri(),\n            json: {\n                name: gameName,\n                gameId: gameId,\n                questions: JSON.parse(questions)\n            }\n        });\n        resolve(gameId);\n    });\n};\nexports.getGame = gameId => {\n    return new Promise((resolve) => {\n        request_1.default(exports.getBaseUri(), (error, response, body) => {\n            const parsedBody = JSON.parse(body);\n            parsedBody.find(game => {\n                if (game.gameId === gameId) {\n                    resolve(game._id);\n                }\n            });\n        });\n    });\n};\nexports.deleteGame = gameId => {\n    exports.getGame(gameId).then((id) => {\n        request_1.default.delete({\n            url: `${exports.getBaseUri()}/${id}`\n        });\n    });\n};\nexports.getLiveGames = games => {\n    const gamesAsArray = [];\n    for (let key in games) {\n        if (!games[key].private && !games[key].isInPlay) {\n            gamesAsArray.push(games[key]);\n        }\n    }\n    return gamesAsArray;\n};\n\n\n//# sourceURL=webpack:///./utilities/utils.ts?')},"body-parser":function(module,exports){eval('module.exports = require("body-parser");\n\n//# sourceURL=webpack:///external_%22body-parser%22?')},cors:function(module,exports){eval('module.exports = require("cors");\n\n//# sourceURL=webpack:///external_%22cors%22?')},express:function(module,exports){eval('module.exports = require("express");\n\n//# sourceURL=webpack:///external_%22express%22?')},http:function(module,exports){eval('module.exports = require("http");\n\n//# sourceURL=webpack:///external_%22http%22?')},mongoose:function(module,exports){eval('module.exports = require("mongoose");\n\n//# sourceURL=webpack:///external_%22mongoose%22?')},"node-restful":function(module,exports){eval('module.exports = require("node-restful");\n\n//# sourceURL=webpack:///external_%22node-restful%22?')},request:function(module,exports){eval('module.exports = require("request");\n\n//# sourceURL=webpack:///external_%22request%22?')},shortid:function(module,exports){eval('module.exports = require("shortid");\n\n//# sourceURL=webpack:///external_%22shortid%22?')},"socket.io":function(module,exports){eval('module.exports = require("socket.io");\n\n//# sourceURL=webpack:///external_%22socket.io%22?')}});